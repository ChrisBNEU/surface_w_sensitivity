[NbConvertApp] Converting notebook copyme.ipynb to notebook
[NbConvertApp] Executing notebook with kernel: python2
[IPKernelApp] ERROR | Failed to create history session in /home/mazeau.e/.ipython/profile_default/history.sqlite. History will not be saved.
Traceback (most recent call last):
  File "/home/mazeau.e/anaconda2/envs/rmg_env3/lib/python2.7/site-packages/IPython/core/history.py", line 549, in __init__
    self.new_session()
  File "<decorator-gen-22>", line 2, in new_session
  File "/home/mazeau.e/anaconda2/envs/rmg_env3/lib/python2.7/site-packages/IPython/core/history.py", line 60, in needs_sqlite
    return f(self, *a, **kw)
  File "/home/mazeau.e/anaconda2/envs/rmg_env3/lib/python2.7/site-packages/IPython/core/history.py", line 576, in new_session
    self.session_number = cur.lastrowid
OperationalError: database is locked
[NbConvertApp] ERROR | Error while converting 'copyme.ipynb'
Traceback (most recent call last):
  File "/home/mazeau.e/anaconda2/envs/rmg_env3/lib/python2.7/site-packages/nbconvert/nbconvertapp.py", line 393, in export_single_notebook
    output, resources = self.exporter.from_filename(notebook_filename, resources=resources)
  File "/home/mazeau.e/anaconda2/envs/rmg_env3/lib/python2.7/site-packages/nbconvert/exporters/exporter.py", line 174, in from_filename
    return self.from_file(f, resources=resources, **kw)
  File "/home/mazeau.e/anaconda2/envs/rmg_env3/lib/python2.7/site-packages/nbconvert/exporters/exporter.py", line 192, in from_file
    return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw)
  File "/home/mazeau.e/anaconda2/envs/rmg_env3/lib/python2.7/site-packages/nbconvert/exporters/notebook.py", line 31, in from_notebook_node
    nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw)
  File "/home/mazeau.e/anaconda2/envs/rmg_env3/lib/python2.7/site-packages/nbconvert/exporters/exporter.py", line 134, in from_notebook_node
    nb_copy, resources = self._preprocess(nb_copy, resources)
  File "/home/mazeau.e/anaconda2/envs/rmg_env3/lib/python2.7/site-packages/nbconvert/exporters/exporter.py", line 311, in _preprocess
    nbc, resc = preprocessor(nbc, resc)
  File "/home/mazeau.e/anaconda2/envs/rmg_env3/lib/python2.7/site-packages/nbconvert/preprocessors/base.py", line 47, in __call__
    return self.preprocess(nb, resources)
  File "/home/mazeau.e/anaconda2/envs/rmg_env3/lib/python2.7/site-packages/nbconvert/preprocessors/execute.py", line 262, in preprocess
    nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources)
  File "/home/mazeau.e/anaconda2/envs/rmg_env3/lib/python2.7/site-packages/nbconvert/preprocessors/base.py", line 69, in preprocess
    nb.cells[index], resources = self.preprocess_cell(cell, resources, index)
  File "/home/mazeau.e/anaconda2/envs/rmg_env3/lib/python2.7/site-packages/nbconvert/preprocessors/execute.py", line 286, in preprocess_cell
    raise CellExecutionError.from_cell_and_msg(cell, out)
CellExecutionError: An error occurred while executing the following cell:
------------------
species_dict = rmgpy.data.kinetics.KineticsLibrary().getSpecies('species_dictionary.txt')
keys = species_dict.keys()

# get the first listed smiles string for each molecule
smile = []
for s in species_dict:
    smile.append(species_dict[s].molecule[0])
    if len(species_dict[s].molecule) is not 1:
        print 'There are %d dupllicate smiles for %s:'%(len(species_dict[s].molecule),s)
        for a in range(len(species_dict[s].molecule)):
            print '%s'%(species_dict[s].molecule[a])
            
# translate the molecules from above into just smiles strings
smiles = []
for s in smile:
    smiles.append(s.toSMILES())
    
names = dict(zip(keys,smiles))

rxns_translated = []

# now replace each molecule with smiles
for x in reactions:
    for key, smile in names.iteritems():
        x = re.sub(re.escape(key), smile, x)
    rxns_translated.append(x)

def export(rxns_translated,ratio,sens_vals,sens_type=1):
    answer = dict(zip(rxns_translated, sens_vals))
    sorted_answer = sorted(answer.items(), key=operator.itemgetter(1), reverse=False)
    # for x in sorted_answer:
    #     print '%s %.4f'%(x)
    
    # write to csv file
    (pd.DataFrame.from_dict(data=sorted_answer, orient='columns')
    .to_csv('dict_{}ratio_{}.csv'.format(ratio,sens_type), header=False))
------------------

[0;31m[0m
[0;31mNameError[0mTraceback (most recent call last)
[0;32m<ipython-input-13-3c87b7745f2e>[0m in [0;36m<module>[0;34m()[0m
[1;32m     21[0m [0;34m[0m[0m
[1;32m     22[0m [0;31m# now replace each molecule with smiles[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 23[0;31m [0;32mfor[0m [0mx[0m [0;32min[0m [0mreactions[0m[0;34m:[0m[0;34m[0m[0m
[0m[1;32m     24[0m     [0;32mfor[0m [0mkey[0m[0;34m,[0m [0msmile[0m [0;32min[0m [0mnames[0m[0;34m.[0m[0miteritems[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[1;32m     25[0m         [0mx[0m [0;34m=[0m [0mre[0m[0;34m.[0m[0msub[0m[0;34m([0m[0mre[0m[0;34m.[0m[0mescape[0m[0;34m([0m[0mkey[0m[0;34m)[0m[0;34m,[0m [0msmile[0m[0;34m,[0m [0mx[0m[0;34m)[0m[0;34m[0m[0m

[0;31mNameError[0m: name 'reactions' is not defined
NameError: name 'reactions' is not defined


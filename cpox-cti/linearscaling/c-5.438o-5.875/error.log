[NbConvertApp] Converting notebook copyme.ipynb to notebook
[NbConvertApp] Executing notebook with kernel: python2
[IPKernelApp] ERROR | Failed to create history session in /home/mazeau.e/.ipython/profile_default/history.sqlite. History will not be saved.
Traceback (most recent call last):
  File "/home/mazeau.e/anaconda2/envs/rmg_env3/lib/python2.7/site-packages/IPython/core/history.py", line 549, in __init__
    self.new_session()
  File "<decorator-gen-22>", line 2, in new_session
  File "/home/mazeau.e/anaconda2/envs/rmg_env3/lib/python2.7/site-packages/IPython/core/history.py", line 60, in needs_sqlite
    return f(self, *a, **kw)
  File "/home/mazeau.e/anaconda2/envs/rmg_env3/lib/python2.7/site-packages/IPython/core/history.py", line 575, in new_session
    NULL, "") """, (datetime.datetime.now(),))
OperationalError: database is locked
[NbConvertApp] ERROR | Error while converting 'copyme.ipynb'
Traceback (most recent call last):
  File "/home/mazeau.e/anaconda2/envs/rmg_env3/lib/python2.7/site-packages/nbconvert/nbconvertapp.py", line 393, in export_single_notebook
    output, resources = self.exporter.from_filename(notebook_filename, resources=resources)
  File "/home/mazeau.e/anaconda2/envs/rmg_env3/lib/python2.7/site-packages/nbconvert/exporters/exporter.py", line 174, in from_filename
    return self.from_file(f, resources=resources, **kw)
  File "/home/mazeau.e/anaconda2/envs/rmg_env3/lib/python2.7/site-packages/nbconvert/exporters/exporter.py", line 192, in from_file
    return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw)
  File "/home/mazeau.e/anaconda2/envs/rmg_env3/lib/python2.7/site-packages/nbconvert/exporters/notebook.py", line 31, in from_notebook_node
    nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw)
  File "/home/mazeau.e/anaconda2/envs/rmg_env3/lib/python2.7/site-packages/nbconvert/exporters/exporter.py", line 134, in from_notebook_node
    nb_copy, resources = self._preprocess(nb_copy, resources)
  File "/home/mazeau.e/anaconda2/envs/rmg_env3/lib/python2.7/site-packages/nbconvert/exporters/exporter.py", line 311, in _preprocess
    nbc, resc = preprocessor(nbc, resc)
  File "/home/mazeau.e/anaconda2/envs/rmg_env3/lib/python2.7/site-packages/nbconvert/preprocessors/base.py", line 47, in __call__
    return self.preprocess(nb, resources)
  File "/home/mazeau.e/anaconda2/envs/rmg_env3/lib/python2.7/site-packages/nbconvert/preprocessors/execute.py", line 262, in preprocess
    nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources)
  File "/home/mazeau.e/anaconda2/envs/rmg_env3/lib/python2.7/site-packages/nbconvert/preprocessors/base.py", line 69, in preprocess
    nb.cells[index], resources = self.preprocess_cell(cell, resources, index)
  File "/home/mazeau.e/anaconda2/envs/rmg_env3/lib/python2.7/site-packages/nbconvert/preprocessors/execute.py", line 286, in preprocess_cell
    raise CellExecutionError.from_cell_and_msg(cell, out)
CellExecutionError: An error occurred while executing the following cell:
------------------
# finding exit conversions
end_temp = []
ch4_conv = []
o2_conv = []
co_sel = []
h2_sel = []
h2o_sel = []
# ratios = []
for r in data:
#     gas_out,gas_names,dist_array,T_array = r[1]
    for x in range(len(r[1][1])):
        if r[1][1][x]=='CH4(2)':
            ch4_in = r[1][0][0][x]
            ch4_out = r[1][0][-1][x]
            ch4_conv.append((ch4_in-ch4_out)/ch4_in)
        if r[1][1][x]=='O2(3)':
            o2_in = r[1][0][0][x]
            o2_out = r[1][0][-1][x]
            o2_conv.append((o2_in-o2_out)/o2_in)
    end_temp.append(r[1][3][-1])
    
    for x in range(len(r[1][1])):
        if r[1][1][x]=='Ar':
            ar = r[1][0][-1][x]
        if r[1][1][x]=='CO(7)':
            co_out = r[1][0][-1][x]
            co_sel.append(co_out/(1-ch4_out-o2_out-ar))
        if r[1][1][x]=='H2O(5)':
            h2o_out = r[1][0][-1][x]
            h2o_sel.append(h2o_out/(1-ch4_out-o2_out-ar))
        if r[1][1][x]=='H2(6)':
            h2_out = r[1][0][-1][x]
            h2_sel.append(h2_out/(1-ch4_out-o2_out-ar))
        
#     ratios.append(r[0])


fig, axs = plt.subplots(1,2)
# plot exit conversion and temp
axs[0].plot(ratios, ch4_conv,'bo-', label='CH4', color='green')
axs[0].plot(ratios, o2_conv, 'bo-',label='O2', color='blue')
ax2 = axs[0].twinx()
ax2.plot(ratios, end_temp, 'bo-',label='temp', color = 'red')

# plot exit selectivities
axs[1].plot(ratios, h2o_sel, 'bo-',label='H2O', color ='pink')
axs[1].plot(ratios, co_sel, 'bo-',label='CO', color ='purple')
axs[1].plot(ratios, h2_sel, 'bo-',label='H2', color ='orange')

axs[0].legend()
axs[1].legend()
axs[0].set_ylabel('Exit conversion (%)', fontsize=13);
ax2.set_ylabel('Exit temperature (K)', fontsize=13)
axs[0].set_xlabel('C/O Ratio', fontsize=13);
axs[1].set_ylabel('Exit selectivity (%)', fontsize=13)
axs[1].set_xlabel('C/O Ratio', fontsize=13)
plt.tight_layout()
fig.set_figheight(6)
fig.set_figwidth(16)
fig.savefig('conversion&selectivity.png', bbox_inches='tight')
------------------

[0;31m[0m
[0;31mValueError[0mTraceback (most recent call last)
[0;32m<ipython-input-8-b006d0b9d5aa>[0m in [0;36m<module>[0;34m()[0m
[1;32m     38[0m [0mfig[0m[0;34m,[0m [0maxs[0m [0;34m=[0m [0mplt[0m[0;34m.[0m[0msubplots[0m[0;34m([0m[0;36m1[0m[0;34m,[0m[0;36m2[0m[0;34m)[0m[0;34m[0m[0m
[1;32m     39[0m [0;31m# plot exit conversion and temp[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 40[0;31m [0maxs[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m.[0m[0mplot[0m[0;34m([0m[0mratios[0m[0;34m,[0m [0mch4_conv[0m[0;34m,[0m[0;34m'bo-'[0m[0;34m,[0m [0mlabel[0m[0;34m=[0m[0;34m'CH4'[0m[0;34m,[0m [0mcolor[0m[0;34m=[0m[0;34m'green'[0m[0;34m)[0m[0;34m[0m[0m
[0m[1;32m     41[0m [0maxs[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m.[0m[0mplot[0m[0;34m([0m[0mratios[0m[0;34m,[0m [0mo2_conv[0m[0;34m,[0m [0;34m'bo-'[0m[0;34m,[0m[0mlabel[0m[0;34m=[0m[0;34m'O2'[0m[0;34m,[0m [0mcolor[0m[0;34m=[0m[0;34m'blue'[0m[0;34m)[0m[0;34m[0m[0m
[1;32m     42[0m [0max2[0m [0;34m=[0m [0maxs[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m.[0m[0mtwinx[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0m

[0;32m/home/mazeau.e/anaconda2/envs/rmg_env3/lib/python2.7/site-packages/matplotlib/__init__.pyc[0m in [0;36minner[0;34m(ax, *args, **kwargs)[0m
[1;32m   1865[0m                         [0;34m"the Matplotlib list!)"[0m [0;34m%[0m [0;34m([0m[0mlabel_namer[0m[0;34m,[0m [0mfunc[0m[0;34m.[0m[0m__name__[0m[0;34m)[0m[0;34m,[0m[0;34m[0m[0m
[1;32m   1866[0m                         RuntimeWarning, stacklevel=2)
[0;32m-> 1867[0;31m             [0;32mreturn[0m [0mfunc[0m[0;34m([0m[0max[0m[0;34m,[0m [0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0m
[0m[1;32m   1868[0m [0;34m[0m[0m
[1;32m   1869[0m         inner.__doc__ = _add_data_doc(inner.__doc__,

[0;32m/home/mazeau.e/anaconda2/envs/rmg_env3/lib/python2.7/site-packages/matplotlib/axes/_axes.pyc[0m in [0;36mplot[0;34m(self, *args, **kwargs)[0m
[1;32m   1526[0m         [0mkwargs[0m [0;34m=[0m [0mcbook[0m[0;34m.[0m[0mnormalize_kwargs[0m[0;34m([0m[0mkwargs[0m[0;34m,[0m [0m_alias_map[0m[0;34m)[0m[0;34m[0m[0m
[1;32m   1527[0m [0;34m[0m[0m
[0;32m-> 1528[0;31m         [0;32mfor[0m [0mline[0m [0;32min[0m [0mself[0m[0;34m.[0m[0m_get_lines[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[0m[1;32m   1529[0m             [0mself[0m[0;34m.[0m[0madd_line[0m[0;34m([0m[0mline[0m[0;34m)[0m[0;34m[0m[0m
[1;32m   1530[0m             [0mlines[0m[0;34m.[0m[0mappend[0m[0;34m([0m[0mline[0m[0;34m)[0m[0;34m[0m[0m

[0;32m/home/mazeau.e/anaconda2/envs/rmg_env3/lib/python2.7/site-packages/matplotlib/axes/_base.pyc[0m in [0;36m_grab_next_args[0;34m(self, *args, **kwargs)[0m
[1;32m    404[0m                 [0mthis[0m [0;34m+=[0m [0margs[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m,[0m[0;34m[0m[0m
[1;32m    405[0m                 [0margs[0m [0;34m=[0m [0margs[0m[0;34m[[0m[0;36m1[0m[0;34m:[0m[0;34m][0m[0;34m[0m[0m
[0;32m--> 406[0;31m             [0;32mfor[0m [0mseg[0m [0;32min[0m [0mself[0m[0;34m.[0m[0m_plot_args[0m[0;34m([0m[0mthis[0m[0;34m,[0m [0mkwargs[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[0m[1;32m    407[0m                 [0;32myield[0m [0mseg[0m[0;34m[0m[0m
[1;32m    408[0m [0;34m[0m[0m

[0;32m/home/mazeau.e/anaconda2/envs/rmg_env3/lib/python2.7/site-packages/matplotlib/axes/_base.pyc[0m in [0;36m_plot_args[0;34m(self, tup, kwargs)[0m
[1;32m    381[0m             [0mx[0m[0;34m,[0m [0my[0m [0;34m=[0m [0mindex_of[0m[0;34m([0m[0mtup[0m[0;34m[[0m[0;34m-[0m[0;36m1[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0m
[1;32m    382[0m [0;34m[0m[0m
[0;32m--> 383[0;31m         [0mx[0m[0;34m,[0m [0my[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_xy_from_xy[0m[0;34m([0m[0mx[0m[0;34m,[0m [0my[0m[0;34m)[0m[0;34m[0m[0m
[0m[1;32m    384[0m [0;34m[0m[0m
[1;32m    385[0m         [0;32mif[0m [0mself[0m[0;34m.[0m[0mcommand[0m [0;34m==[0m [0;34m'plot'[0m[0;34m:[0m[0;34m[0m[0m

[0;32m/home/mazeau.e/anaconda2/envs/rmg_env3/lib/python2.7/site-packages/matplotlib/axes/_base.pyc[0m in [0;36m_xy_from_xy[0;34m(self, x, y)[0m
[1;32m    240[0m         [0;32mif[0m [0mx[0m[0;34m.[0m[0mshape[0m[0;34m[[0m[0;36m0[0m[0;34m][0m [0;34m!=[0m [0my[0m[0;34m.[0m[0mshape[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m:[0m[0;34m[0m[0m
[1;32m    241[0m             raise ValueError("x and y must have same first dimension, but "
[0;32m--> 242[0;31m                              "have shapes {} and {}".format(x.shape, y.shape))
[0m[1;32m    243[0m         [0;32mif[0m [0mx[0m[0;34m.[0m[0mndim[0m [0;34m>[0m [0;36m2[0m [0;32mor[0m [0my[0m[0;34m.[0m[0mndim[0m [0;34m>[0m [0;36m2[0m[0;34m:[0m[0;34m[0m[0m
[1;32m    244[0m             raise ValueError("x and y can be no greater than 2-D, but have "

[0;31mValueError[0m: x and y must have same first dimension, but have shapes (15,) and (11,)
ValueError: x and y must have same first dimension, but have shapes (15,) and (11,)

